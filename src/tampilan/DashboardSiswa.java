/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tampilan;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author lincbp
 */
public class DashboardSiswa extends javax.swing.JPanel {
    private int loginId;
    private int pendaftaranId;
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    private String statusPendaftaran;
    
    private MainMenu panelParent;
    /**
     * Creates new form DashboardSiswa
     */
    public DashboardSiswa(int id, MainMenu parent) {
        initComponents();
        this.loginId = id;
        
        btnTagihan.setVisible(false);
        
        this.getDataSiswa();
        this.getDataPendaftaran();
        
        panelParent = parent;
    }
    
    public void getDataPendaftaran(){
        String sql = "SELECT * FROM pendaftaran WHERE id_siswa = '"+loginId+"'";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if(hasil.next()){
                noPendaftarantxt.setText("Nomor Pendaftaran : "+hasil.getString("no_pendaftaran"));
                pendaftaranId = hasil.getInt("id_pendaftaran");
                String status = hasil.getString("status");  
                this.statusPendaftaran = status;
                this.totalTagihanTxt.setVisible(false);
                if(status.equals("Baru")){
                    btnKirim.setVisible(true);
                }else{
                    btnKirim.setVisible(false);
                }
                
                if(status.equals("Diterima")){
                    getDataTagihan();
                    
                }
            }else{
                btnKirim.setVisible(false);
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
    }
    
    public void getDataTagihan(){
        String sql = "SELECT SUM((biaya-IFNULL(dibayar,0))) as totalBiaya FROM tagihan WHERE id_pendaftaran= '"+pendaftaranId+"' AND (dibayar IS NULL OR dibayar < biaya)";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if(hasil.next()){
                int biaya = hasil.getInt("totalBiaya");
                
                if(biaya > 0){
                    btnTagihan.setVisible(true);
                }
                totalTagihanTxt.setText("Total Tagihan : Rp."+biaya);
                totalTagihanTxt.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Something Wrong.....");
                System.out.println("tampilan.DashboardSiswa.getDataTagihan()");
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
    }
    public void getDataSiswa(){
        String sql = "SELECT * FROM siswa WHERE id_siswa = '"+loginId+"'";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if(hasil.next()){
                namaSiswaTxt.setText("Nama : "+hasil.getString("nama"));
            }else{
                JOptionPane.showMessageDialog(null, "Something Wrong.....");
                System.out.println("tampilan.DashboardSiswa.getDataSiswa()");
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
    }
    
    private boolean checkNilai(){
        boolean res = false;
        String sql = "SELECT COUNT(*) as total FROM nilai WHERE id_pendaftaran='"+pendaftaranId+"'";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            if(hasil.next()){
                if(hasil.getInt("total") > 0){
                    res = true;
                }
            }else{
                res = false;
            }
        }catch (SQLException e){
            res = false;
            e.printStackTrace();
        }
        return res;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        namaSiswaTxt = new javax.swing.JLabel();
        noPendaftarantxt = new javax.swing.JLabel();
        btnCheck = new javax.swing.JButton();
        btnKirim = new javax.swing.JButton();
        totalTagihanTxt = new javax.swing.JLabel();
        btnTagihan = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Selamat Datang Calon Peserta Didik Baru ");

        namaSiswaTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        namaSiswaTxt.setText("Nama :");

        noPendaftarantxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noPendaftarantxt.setText("Nomor Pendaftaran :");

        btnCheck.setText("Check Status");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnKirim.setText("Kirim Pendaftaran");
        btnKirim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKirimActionPerformed(evt);
            }
        });

        totalTagihanTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        totalTagihanTxt.setText("Total Tagihan :");

        btnTagihan.setText("Detail Tagihan");
        btnTagihan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTagihanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(namaSiswaTxt)
                    .addComponent(noPendaftarantxt)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKirim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTagihan))
                    .addComponent(totalTagihanTxt))
                .addContainerGap(310, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(namaSiswaTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(noPendaftarantxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalTagihanTxt)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheck)
                    .addComponent(btnKirim)
                    .addComponent(btnTagihan))
                .addContainerGap(254, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnKirimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKirimActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null, "Apakah Anda Sudah Yakin ?","Warning",JOptionPane.YES_NO_OPTION);
        
        if(res == JOptionPane.YES_OPTION){
            Boolean checkNilai = this.checkNilai();
            if(checkNilai){
                String sql = "UPDATE PENDAFTARAN SET status = 'Dikirim' WHERE id_pendaftaran = ?";
                try {
                    PreparedStatement stat = conn.prepareStatement(sql);
                    stat.setInt(1, pendaftaranId);

                    int rowsAffected = stat.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
                        getDataPendaftaran();
                    } else {
                        JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan");
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Data Gagal Dihapus: " + e.getMessage());
                }
            }else{
                JOptionPane.showMessageDialog(null, "Data Nilai Kosong");
            }
        }
    }//GEN-LAST:event_btnKirimActionPerformed

    
    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        if(statusPendaftaran != null){
            if(statusPendaftaran.equals("Baru")){
                JOptionPane.showMessageDialog(null, "Status Pendaftaran Anda Saat ini adalah 'BARU', Silahkan Kirimkan Data Pendaftaran Setelah Mengisi Semua Data");
            }else if(statusPendaftaran.equals("Dikirim")){
               JOptionPane.showMessageDialog(null, "Status Pendaftaran Anda Saat ini adalah 'DIKIRM', Silahkan Tunggu Admin Kami Mengecek Data Yang Ada Kirimkan"); 
            }else if(statusPendaftaran.equals("Diterima")){
                JOptionPane.showMessageDialog(null, "Status Pendaftaran Anda Saat ini adalah 'DITERIMA', Silahkan Lakukan Pembayaran Pada Menu Tagihan.");
            }else if(statusPendaftaran.equals("Validasi Pembayaran")){
                JOptionPane.showMessageDialog(null, "Status Pendaftaran Anda Saat ini adalah 'VALIDASI PEMBAYARAN', Silahkan Tunggu Admin Kami Mengecek Pembayaran Anda.");
            }else if(statusPendaftaran.equals("Selesai")){
                JOptionPane.showMessageDialog(null, "Status Pendaftaran Anda Saat ini adalah 'SELESAI', Selamat Anda Sudah Diterima Menjadi Siswa Disekolah Kami....");
            }else if(statusPendaftaran.equals("Ditolak")){
                JOptionPane.showMessageDialog(null, "Mohon Maaf Pendaftaran Anda Kami 'Tolak', Tetap Semangat dan Semoga Sukses DiSekolah Lain :D ");
            }else{
                JOptionPane.showMessageDialog(null, statusPendaftaran);
            }
        }else{
                JOptionPane.showMessageDialog(null, "Silahkan Isi Data Pendaftaran ");
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnTagihanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTagihanActionPerformed
        // TODO add your handling code here:
        panelParent.showTagihan();
    }//GEN-LAST:event_btnTagihanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnKirim;
    private javax.swing.JButton btnTagihan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel namaSiswaTxt;
    private javax.swing.JLabel noPendaftarantxt;
    private javax.swing.JLabel totalTagihanTxt;
    // End of variables declaration//GEN-END:variables
}
